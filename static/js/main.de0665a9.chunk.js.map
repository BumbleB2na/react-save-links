{"version":3,"sources":["components/LinkListItemAdd/LinkListItemAdd.js","components/LinkListItem/LinkListItem.js","components/LinkList/LinkList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","newHyperlink","color","palette","text","hint","hyperlinkVisited","textDecorationLine","ListItemAddButtonDialog","props","classes","React","useState","stateIsDialogOpen","setStateIsDialogOpen","url","stateUrl","setStateUrl","title","stateTitle","setStateTitle","handleClickSaveForLaterButton","trim","showAlertMessage","isUrlValid","saveHyperlink","handleClose","msg","alert","length","substr","a","createHyperlinkFromState","JSON","stringify","hyperlink","visited","createdOn","Date","toISOString","setTimeout","ListItem","className","button","component","onClick","ListItemIcon","ListItemText","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","margin","label","type","fullWidth","value","onChange","e","target","autoFocus","required","onKeyUp","key","DialogActions","Button","LinkListItemAdd","state","isDialogOpen","this","Component","ListItemButton","children","ListItemTextLink","Link","href","rel","stopPropagation","handleClickDelete","LinkListItem","ListItemSecondaryAction","IconButton","root","paddingTop","paddingBottom","LinkList","List","Divider","app","minHeight","display","flexDirection","appHeader","paddingLeft","paddingRight","fontSize","backgroundColor","appHeaderH1","marginTop","marginBottom","appBody","flex","background","default","appFooter","App","Box","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de0665a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n// Dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tnewHyperlink: {\r\n\t\tcolor: theme.palette.text.hint\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nfunction ListItemAddButtonDialog(props) {\r\n\tconst classes = useStyles();\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = React.useState(false);\r\n\tconst [stateUrl, setStateUrl] = React.useState(props.url);\r\n\tconst [stateTitle, setStateTitle] = React.useState(props.title);\r\n\t\r\n\tconst resetInputState = () => {\r\n\t\tsetStateTitle('');\r\n\t\tsetStateUrl('https://');\r\n\t};\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleClickSaveForLaterButton = () => {\r\n\t\tconst isUrlEmpty = stateUrl.trim() === '';\r\n\t\tif(isUrlEmpty) {\r\n\t\t\tshowAlertMessage('Whoops','You must enter a hyperlink to be saved for later');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isTheUrlValid = isUrlValid(stateUrl);\r\n\t\tif(!isTheUrlValid) {\r\n\t\t\tshowAlertMessage('Whoops','The hyperlink you entered is not valid');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsaveHyperlink();\r\n\t\thandleClose();\r\n\t};\r\n\tconst showAlertMessage = (title, msg) => {\r\n\t\talert(title + ': ' + msg);\r\n\t};\r\n\tconst isUrlValid = (url) => {\r\n\t\tvar isValid = url.length > 9 && (url.substr(0, 7) === 'http://' || url.substr(0, 8) === 'https://');\r\n\t\treturn isValid;\r\n\t};\r\n\tconst saveHyperlink = async () => {\r\n\t\tlet newHyperlink = createHyperlinkFromState();\r\n\r\n\t\talert('TODO: Create new hyperlink from state: '+ JSON.stringify(newHyperlink));\r\n\t};\r\n\tconst createHyperlinkFromState = () => {\t\t\r\n\t\tlet hyperlink = {\r\n\t\t\turl: stateUrl.trim(),\r\n\t\t\tvisited: false,\r\n\t\t\tcreatedOn: (new Date()).toISOString()\r\n\t\t}\r\n\t\tif(stateTitle)\r\n\t\t\thyperlink.title = stateTitle;\r\n\t\treturn hyperlink;\r\n\t};\r\n\tconst handleKeyUpUrl = (e) => {\r\n\t\tconst isEnterKey = (e.key === 'Enter');\r\n\t\tif(isEnterKey)\r\n\t\t\thandleClickSaveForLaterButton();\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t\tsetTimeout(() => {\r\n\t\t\tresetInputState();\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ListItem className={classes.newHyperlink} button component=\"button\" {...props}\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\tNew Hyperlink\r\n\t\t\t\t</ListItemText>\r\n\t\t\t</ListItem>\r\n\t\t\t<Dialog open={stateIsDialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">Save For Later</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tWhat do you want to read, watch or listen to?\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\tlabel=\"Title (optional)\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvalue={stateTitle}\r\n\t\t\t\t\t\tonChange={e => setStateTitle(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tid=\"url\"\r\n\t\t\t\t\t\tlabel=\"Url\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tonKeyUp={handleKeyUpUrl}\r\n\t\t\t\t\t\tvalue={stateUrl}\r\n\t\t\t\t\t\tonChange={e => setStateUrl(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={handleClose} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={handleClickSaveForLaterButton} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave Link\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class LinkListItemAdd extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: this.props.title || '',\r\n\t\t\turl: this.props.url || 'https://',\r\n\t\t\tisDialogOpen: false\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ListItemAddButtonDialog\r\n\t\t\t\ttitle={this.state.title}\t\r\n\t\t\t\turl={this.state.url}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\thyperlink: {\r\n\t\tcolor: 'blue'\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nfunction ListItemButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = () => {\r\n\t\talert('TODO: Open dialog to edit existing hyperlink');\r\n\t\treturn false;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem className={props.visited ? classes.hyperlinkVisited : classes.hyperlink} button component=\"button\" {...props}\r\n\t\t\tonClick={handleClickHyperlink}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</ListItem>\r\n\t);\r\n}\r\nfunction ListItemTextLink(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = (e) => {\r\n\t\talert('TODO: Update hyperlink to set it to visited. Now opening hyperlink in new tab...');\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItemText>\r\n\t\t\t<Link \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton component=\"a\"\r\n\t\t\t\thref={props.url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tonClick={handleClickHyperlink}\r\n\t\t\t>\r\n\t\t\t\t{props.title || props.url}\r\n\t\t\t</Link>\r\n\t\t</ListItemText>\r\n\t);\r\n}\r\n\r\nconst handleClickDelete = () => {\r\n\talert('TODO: delete hyperlink');\r\n};\r\n\r\nexport default class LinkListItem extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: this.props.title || '',\r\n\t\t\turl: this.props.url || 'https://',\r\n\t\t\tvisited: this.props.visited || false\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ListItemButton>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<LinkIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemTextLink\r\n\t\t\t\t\ttitle={this.state.title}\r\n\t\t\t\t\turl={this.state.url}\r\n\t\t\t\t\tvisited={this.state.visited}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={handleClickDelete}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItemButton>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LinkListItemAdd from '../../components/LinkListItemAdd/LinkListItemAdd';\r\nimport LinkListItem from '../../components/LinkListItem/LinkListItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0\r\n\t}\r\n}));\r\n\r\nexport default function LinkList() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<List className={classes.root}>\r\n\t\t\t<LinkListItemAdd />\r\n\t\t\t<Divider />\r\n\t\t\t<LinkListItem\r\n\t\t\t\ttitle=\"Example.com\"\r\n\t\t\t\turl=\"https://example.com\"\r\n\t\t\t></LinkListItem>\r\n\t\t\t<Divider />\r\n\t\t\t<LinkListItem\r\n\t\t\t\turl=\"https://google.com\"\r\n\t\t\t\tvisited=\"true\"\r\n\t\t\t></LinkListItem>\r\n\t\t\t<Divider />\r\n\t\t</List>\r\n\t);\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LinkList from './components/LinkList/LinkList';\n\nconst useStyles = makeStyles((theme) => ({\n\tapp: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tappHeader: {\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t},\n\tappHeaderH1: {\n\t\tmarginTop: 2,\n\t\tmarginBottom: -10\n\t},\n\tappBody: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.palette.background.default, //theme.palette.background.paper\n\t},\n\tappFooter: {\n\t\tpaddingTop: 8,\n\t\tpaddingBottom: 8,\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Box className={classes.app}>\n\t\t\t<header className={classes.appHeader}>\n\t\t\t\t<h1 className={classes.appHeaderH1}>Save Links for Later</h1>\n\t\t\t\t<p>What do you want to read, watch or listen to?</p>\n\t\t\t</header>\n\t\t\t<Box className={classes.appBody}>\n\t\t\t\t<LinkList />\n\t\t\t</Box>\n\t\t\t<footer className={classes.appFooter}>\n\t\t\t\tCopyright &copy; 2020\n\t\t\t</footer>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}