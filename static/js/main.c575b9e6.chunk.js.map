{"version":3,"sources":["components/LinkListItemSaveDialog/LinkListItemSaveDialogContants.js","components/LinkListItemSaveDialog/LinkListItemSaveDialog.js","components/LinkListItemAdd/LinkListItemAdd.js","components/LinkListItem/LinkListItem.js","services/DataLocal/DataLocal.js","services/DataServer/DataServer.js","services/Data/Data.js","components/LinkList/LinkListContants.js","components/LinkList/LinkList.js","App.js","serviceWorker.js","index.js"],"names":["linkListItemSaveDialogErrors","LinkListItemSaveDialog","props","React","useState","title","stateTitle","setStateTitle","url","stateUrl","setStateUrl","stateUrlError","setStateUrlError","handleClickSaveForLaterButton","trim","isUrlValid","id","updateHyperlink","saveNewHyperlink","handleClose","length","substr","updatesToHyperlink","createHyperlinkFromState","onUpdateHyperlink","newHyperlink","onSaveNewHyperlink","hyperlink","onCloseDialog","Dialog","aria-labelledby","open","onEnter","onClose","DialogTitle","DialogContent","DialogContentText","TextField","margin","type","fullWidth","label","value","onChange","e","target","autoFocus","required","error","helperText","onKeyUp","key","DialogActions","Button","color","onClick","data-testid","useStyles","makeStyles","theme","addHyperlink","palette","text","hint","LinkListItemAdd","classes","stateIsDialogOpen","setStateIsDialogOpen","Fragment","ListItem","className","button","component","ListItemIcon","ListItemText","hyperlinkVisited","textDecorationLine","LinkListItem","ListItemEditable","ListItemTextLink","visited","onUpdateHyperlinkAsVisited","updatedHyperlink","ListItemSecondaryAction","IconButton","deletedHyperlink","onDeleteHyperlink","children","updateHyperlinkAsVisited","Link","href","rel","stopPropagation","this","DATABASE_NAME","DATABASE_VERSION","_db","undefined","ERROR","INDEXEDDB_NOT_SUPPORTED","INDEXEDDB_NOT_INITIALIZED","throwErrorIfIndexedDBNotInitialized","getAllFromIndex","hyperlinksArray","convertArrayToObject","put","delete","deleteDB","blocked","Error","window","openDB","upgrade","upgradeDb","oldVersion","newVersion","transaction","createObjectStore","keyPath","autoIncrement","createIndex","blocking","terminated","db","array","keyName","objects","i","object","Object","assign","Promise","resolve","reject","setTimeout","syncedHyperlink","alterSyncedHyperlink","updatedOn","getISOTimestamp","dirty","Date","toISOString","hyperlinks","CREATE","UPDATE","DELETE","sortedHyperlinks","getHyperlinksArraySorted","filter","deleted","generateUid","timestamp","createdOn","updatedHyperlinks","getHyperlinks","entries","map","sort","sortDescByISOTimestamp","Math","random","toString","substring","a","b","unsyncedHyperlinks","DataServer","addOrUpdateHyperlink","updateSyncedHyperlink","DataLocal","loadLocalHyperlinks","loadServerHyperlinks","initIndexedDb","mockHyperlinks","deleteIndexedDb","linkListErrors","Alert","elevation","variant","root","paddingTop","paddingBottom","progressBar","position","width","progressBarHidden","opacity","LinkList","stateHyperlinks","setStateHyperlinks","isSyncing","setIsSyncing","openSnackbarForError","setOpenSnackbarForError","errorMessage","setErrorMessage","fetchHyperlinks","Data","showErrorMessage","console","syncHyperlinks","useEffect","createHyperlink","deleteHyperlink","event","reason","message","linkListItemEls","Divider","Snackbar","autoHideDuration","severity","LinearProgress","List","app","minHeight","display","flexDirection","appHeader","paddingLeft","paddingRight","fontSize","backgroundColor","appHeaderH1","marginTop","marginBottom","appBody","flex","background","default","appFooter","App","year","getFullYear","Box","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c575b9e6.chunk.js","sourcesContent":["const linkListItemSaveDialogErrors = {\r\n\tURL_EMPTY: 'You must enter a hyperlink to be saved for later. E.g. \"https://example.com\"',\r\n\tURL_INVALID: 'The hyperlink you entered is not valid. Valid example: \"https://example.com\"',\r\n};\r\n\r\nexport { linkListItemSaveDialogErrors };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { linkListItemSaveDialogErrors } from './LinkListItemSaveDialogContants';\r\n\r\nexport default function LinkListItemSaveDialog(props) {\r\n\tconst DEFAULT_TITLE = '';\r\n\tconst DEFAULT_URL = 'https://';\r\n\r\n\t// constructor\r\n\tconst [stateTitle, setStateTitle] = React.useState(props.title || DEFAULT_TITLE);\r\n\tconst [stateUrl, setStateUrl] = React.useState(props.url || DEFAULT_URL);\t\r\n\tconst [stateUrlError, setStateUrlError] = React.useState(null);\r\n\t\r\n\tconst resetInputState = () => {\r\n\t\tsetStateTitle(props.title || DEFAULT_TITLE);\r\n\t\tsetStateUrl(props.url || DEFAULT_URL);\r\n\t\tsetStateUrlError(null);\r\n\t};\r\n\r\n\tconst handleClickSaveForLaterButton = () => {\r\n\t\tconst isUrlEmpty = stateUrl.trim() === '';\r\n\t\tif(isUrlEmpty) {\r\n\t\t\tsetStateUrlError(linkListItemSaveDialogErrors.URL_EMPTY);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isTheUrlValid = isUrlValid(stateUrl);\r\n\t\tif(!isTheUrlValid) {\r\n\t\t\tsetStateUrlError(linkListItemSaveDialogErrors.URL_INVALID);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetStateUrlError(null);\r\n\t\tif(props.id)\r\n\t\t\tupdateHyperlink();\r\n\t\telse\r\n\t\t\tsaveNewHyperlink();\r\n\t\thandleClose();\r\n\t};\r\n\tconst isUrlValid = (url) => {\r\n\t\tvar isValid = url.length > 9 && (url.substr(0, 7) === 'http://' || url.substr(0, 8) === 'https://');\r\n\t\treturn isValid;\r\n\t};\r\n\tconst updateHyperlink = () => {\r\n\t\tlet updatesToHyperlink = {\r\n\t\t\tid: props.id,\r\n\t\t\t...createHyperlinkFromState()\r\n\t\t};\r\n\t\tprops.onUpdateHyperlink(updatesToHyperlink);\r\n\t};\r\n\tconst saveNewHyperlink = () => {\r\n\t\tlet newHyperlink = createHyperlinkFromState();\r\n\t\tprops.onSaveNewHyperlink(newHyperlink);\r\n\t};\r\n\tconst createHyperlinkFromState = () => {\t\t\r\n\t\tlet hyperlink = {\r\n\t\t\turl: stateUrl.trim()\r\n\t\t}\r\n\t\tif(stateTitle)\r\n\t\t\thyperlink.title = stateTitle.trim();\r\n\t\treturn hyperlink;\r\n\t};\r\n\tconst handleKeyUpUrl = (e) => {\r\n\t\tconst isEnterKey = (e.key === 'Enter');\r\n\t\tif(isEnterKey)\r\n\t\t\thandleClickSaveForLaterButton();\r\n\t};\r\n\tconst handleOpen = () => {\r\n\t\tresetInputState();\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tprops.onCloseDialog();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog \r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\topen={props.open}\r\n\t\t\tonEnter={handleOpen}\r\n\t\t\tonClose={handleClose}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">Save For Later</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText>\r\n\t\t\t\t\tWhat do you want to read, watch, play or listen to?\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tmargin=\"dense\" type=\"text\" fullWidth \r\n\t\t\t\t\tid=\"title\" \r\n\t\t\t\t\tlabel=\"Title (optional)\"\r\n\t\t\t\t\tvalue={stateTitle} \r\n\t\t\t\t\tonChange={e => setStateTitle(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tautoFocus margin=\"dense\" type=\"text\" required fullWidth\r\n\t\t\t\t\terror={stateUrlError}\r\n\t\t\t\t\thelperText={(stateUrlError) ? stateUrlError : \" \"}\r\n\t\t\t\t\tid=\"url\" \r\n\t\t\t\t\tlabel=\"Url\"\r\n\t\t\t\t\tonKeyUp={handleKeyUpUrl}\r\n\t\t\t\t\tvalue={stateUrl}\r\n\t\t\t\t\tonChange={e => setStateUrl(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClose} \r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClickSaveForLaterButton}\r\n\t\t\t\t\tdata-testid=\"savebutton\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Link\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport LinkListItemSaveDialog from '../../components/LinkListItemSaveDialog/LinkListItemSaveDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddHyperlink: {\r\n\t\tcolor: theme.palette.text.hint\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItemAdd(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = React.useState(false);\r\n\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleCloseDialog = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ListItem \r\n\t\t\t\tclassName={classes.addHyperlink}\r\n\t\t\t\tbutton component=\"button\"\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\tNew Hyperlink\r\n\t\t\t\t</ListItemText>\r\n\t\t\t</ListItem>\r\n\t\t\t<LinkListItemSaveDialog\r\n\t\t\t\turl=\"https://\"\r\n\t\t\t\topen={stateIsDialogOpen}\r\n\t\t\t\tonCloseDialog={handleCloseDialog}\r\n\t\t\t\tonSaveNewHyperlink={props.onSaveNewHyperlink}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport LinkListItemSaveDialog from '../../components/LinkListItemSaveDialog/LinkListItemSaveDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\thyperlink: {\r\n\t\tcolor: 'blue'\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItem(props) {\r\n\tconst handleHyperlinkClicked = () => {\r\n\t\tconst updatedHyperlink = {\r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\r\n\t\t};\r\n\t\tprops.onUpdateHyperlink(updatedHyperlink);\r\n\t}\r\n\tconst handleDeleteClicked = () => {\r\n\t\tconst deletedHyperlink = {\r\n\t\t\tid: props.id\r\n\t\t};\r\n\t\tprops.onDeleteHyperlink(deletedHyperlink);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItemEditable\r\n\t\t\tid={props.id}\r\n\t\t\ttitle={props.title}\r\n\t\t\turl={props.url}\r\n\t\t\tonUpdateHyperlink={props.onUpdateHyperlink}\r\n\t\t>\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<LinkIcon />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemTextLink\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttitle={props.title}\r\n\t\t\t\turl={props.url}\r\n\t\t\t\tvisited={props.visited}\r\n\t\t\t\tonUpdateHyperlinkAsVisited={handleHyperlinkClicked}\r\n\t\t\t/>\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tonClick={handleDeleteClicked}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItemEditable>\r\n\t);\r\n}\r\n\r\nfunction ListItemEditable(props) {\r\n\tconst classes = useStyles();\r\n\t\r\n\t// constructor\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = React.useState(false);\r\n\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleCloseDialog = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ListItem \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton component=\"button\"\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t{props.children}\r\n\t\t\t</ListItem>\r\n\t\t\t<LinkListItemSaveDialog\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttitle={props.title}\r\n\t\t\t\turl={props.url}\r\n\t\t\t\topen={stateIsDialogOpen}\r\n\t\t\t\tonCloseDialog={handleCloseDialog}\r\n\t\t\t\tonUpdateHyperlink={props.onUpdateHyperlink}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction ListItemTextLink(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = (e) => {\r\n\t\tupdateHyperlinkAsVisited();\r\n\t\te.stopPropagation();\r\n\t};\r\n\tconst updateHyperlinkAsVisited = () => {\r\n\t\tconst updatedHyperlink = { \r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\t\r\n\t\t};\r\n\t\tprops.onUpdateHyperlinkAsVisited(updatedHyperlink);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListItemText>\r\n\t\t\t<Link \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton=\"true\" \r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\thref={props.url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tonClick={handleClickHyperlink}\r\n\t\t\t>\r\n\t\t\t\t{props.title || props.url}\r\n\t\t\t</Link>\r\n\t\t</ListItemText>\r\n\t);\r\n}\r\n","import { openDB, deleteDB } from 'idb';  // https://github.com/jakearchibald/idb\r\n\r\nclass DataLocal {\r\n\r\n\tconstructor() {\t\t\r\n\t\tthis.DATABASE_NAME = 'savelinksforlater';  // 'savelinksforlater - [user@email.com] - [unique guid]';\r\n\t\tthis.DATABASE_VERSION = 2;\r\n\t\tthis._db = undefined;\r\n\t\tthis.ERROR = {\r\n\t\t\tINDEXEDDB_NOT_SUPPORTED: \"IndexedDB is not supported by client\",\r\n\t\t\tINDEXEDDB_NOT_INITIALIZED: \"IndexedDB store was not intialized and cannot be used\"\r\n\t\t};\r\n\t}\r\n\r\n\tasync getHyperlinks() {\r\n\t\tthis.throwErrorIfIndexedDBNotInitialized();\r\n\t\tconst hyperlinksArray = await this._db.getAllFromIndex('hyperlinks', 'createdOn');\r\n\t\treturn hyperlinksArray && this.convertArrayToObject(hyperlinksArray, 'id');\r\n\t}\r\n\r\n\tasync addOrUpdateHyperlink(hyperlink) {\r\n\t\tthis.throwErrorIfIndexedDBNotInitialized();\r\n\t\tawait this._db.put('hyperlinks', hyperlink);\r\n\t}\r\n\r\n\tasync deleteHyperlink(id) {\r\n\t\tthis.throwErrorIfIndexedDBNotInitialized();\r\n\t\tawait this._db.delete('hyperlinks', id);\r\n\t}\r\n\r\n\tasync deleteIndexedDb() {\r\n\t\tthis.throwErrorIfIndexedDBNotInitialized();\t\t\r\n\t\tawait deleteDB(this.DATABASE_NAME, {\r\n\t\t\tblocked() {\r\n\t\t\t\t// ...\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tthrowErrorIfIndexedDBNotInitialized() {\r\n\t\tif(!this._db) {\r\n\t\t\tthrow new Error(this.ERROR.INDEXEDDB_NOT_INITIALIZED);\r\n\t\t}\r\n\t}\r\n\r\n\tasync initIndexedDb() {\r\n\t\tif(this._db) {\r\n\t\t\treturn;  // IndexedDB was already initialized once before\r\n\t\t}\r\n\t\tconst isIDBSupported = ('indexedDB' in window);\r\n\t\tif(!isIDBSupported) {\r\n\t\t\tthrow new Error(this.ERROR.INDEXEDDB_NOT_SUPPORTED);\r\n\t\t}\r\n\t\t\r\n\t\t// open IndexedDB store and create/upgrade the local database store if needed\r\n\t\tconst db = await openDB(this.DATABASE_NAME, this.DATABASE_VERSION, {\r\n\t\t\tupgrade(upgradeDb, oldVersion, newVersion, transaction) {\r\n\t\t\t\t// NOTE: Using if statements instead of switch statement for continuous integration\r\n\t\t\t\tif(oldVersion <= 1) {\r\n\t\t\t\t\t// init version 1 of hyperlinks store\r\n\t\t\t\t\tconst store = upgradeDb.createObjectStore('hyperlinks', {\r\n\t\t\t\t\t\tkeyPath: 'id',\r\n\t\t\t\t\t\tautoIncrement: false,  // false to use value of 'id' parameter\r\n\t\t\t\t\t});\r\n\t\t\t\t\tstore.createIndex('createdOn', 'createdOn');\r\n\t\t\t\t}\r\n\t\t\t\tif(oldVersion <= 2) {\r\n\t\t\t\t\t// Placeholder for next version update where old version will be 2 (ie: DATABASE_VERSION = 3)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tblocked() {\r\n\t\t\t\t// ...\r\n\t\t\t},\r\n\t\t\tblocking() {\r\n\t\t\t\t// ...\r\n\t\t\t},\r\n\t\t\tterminated() {\r\n\t\t\t\t// ...\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tthis._db = db;\r\n\t}\r\n\r\n\t// turn array of objects in to key-value object\r\n\tconvertArrayToObject(array, keyName) {\r\n\t\tlet objects = {};\r\n\t\tfor(var i = 0; i < array.length; i++) {\r\n\t\t\tconst object = Object.assign({}, array[i]);  // make copy of object\r\n\t\t\tobjects[object[keyName]] = object;\r\n\t\t}\r\n\t\treturn objects;\r\n\t}\r\n}\r\n\r\nexport default new DataLocal();","// Simulate calls to server\r\nclass DataServer {\r\n\r\n\tasync getHyperlinks() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tresolve();\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\r\n\tasync addOrUpdateHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet syncedHyperlink = this.alterSyncedHyperlink(hyperlink);\r\n\t\t\t\tresolve(syncedHyperlink);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\r\n\t// For testing -- alters hyperlink the same as a server would\r\n\talterSyncedHyperlink(hyperlink) {\r\n\t\tlet syncedHyperlink = Object.assign({}, hyperlink);  // make copy\r\n\t\tsyncedHyperlink.updatedOn = this.getISOTimestamp();\r\n\t\tdelete syncedHyperlink.dirty;\r\n\t\treturn syncedHyperlink;\r\n\t}\r\n\t\r\n\tgetISOTimestamp() {\r\n\t\treturn (new Date()).toISOString();\r\n\t}\r\n\r\n}\r\n\r\nexport default new DataServer();","import DataLocal from \"../../services/DataLocal/DataLocal\";\r\nimport DataServer from \"../../services/DataServer/DataServer\"\r\n\r\nclass Data {\r\n\r\n\tconstructor() {\r\n\t\tthis.hyperlinks = {};\r\n\t\tthis.ERROR = {\r\n\t\t\tCREATE: \"Cannot create hyperlink because object already has an id property\",\r\n\t\t\tUPDATE: \"Cannot update hyperlink because object has no id property\",\r\n\t\t\tDELETE: \"Cannot delete hyperlink because object has no id property\",\r\n\t\t};\r\n\t}\r\n\r\n\tasync getHyperlinks() {\r\n\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted().filter(hyperlink => !hyperlink.deleted);\r\n\t\treturn sortedHyperlinks;\r\n\t}\r\n\t\r\n\tasync createHyperlink(hyperlink) {\r\n\t\tif(hyperlink.id) {\r\n\t\t\tthrow new Error(this.ERROR.CREATE);\r\n\t\t}\r\n\r\n\t\t// update in-memory data\r\n\t\tconst id = this.generateUid();\r\n\t\tconst timestamp = this.getISOTimestamp();\r\n\t\tconst newHyperlink = {\r\n\t\t\tid,\r\n\t\t\t...hyperlink,\r\n\t\t\tcreatedOn: timestamp,\r\n\t\t\tupdatedOn: timestamp,\r\n\t\t\tdirty: true\r\n\t\t};\r\n\t\tconst updatedHyperlinks = {\r\n\t\t\t...this.hyperlinks,\r\n\t\t\t[id] : newHyperlink\r\n\t\t};\r\n\t\tthis.hyperlinks = updatedHyperlinks;\r\n\t\treturn this.getHyperlinks();\r\n\t}\r\n\t\r\n\tasync updateHyperlink(hyperlink) {\r\n\t\tif(!hyperlink.id) {\r\n\t\t\tthrow new Error(this.ERROR.UPDATE);\r\n\t\t}\r\n\r\n\t\t// update in-memory data\r\n\t\tlet updatedHyperlinks = {\r\n\t\t\t...this.hyperlinks\r\n\t\t};\r\n\t\tconst timestamp = this.getISOTimestamp();\r\n\t\tconst updatedHyperlink = {\r\n\t\t\t...updatedHyperlinks[hyperlink.id],\r\n\t\t\t...hyperlink,\r\n\t\t\tdirty: true,\r\n\t\t\tupdatedOn: timestamp\r\n\t\t}\r\n\t\tif(!updatedHyperlink.createdOn)\r\n\t\t\tupdatedHyperlink.createdOn = timestamp;\r\n\t\tupdatedHyperlinks[updatedHyperlink.id] = updatedHyperlink;\r\n\t\tthis.hyperlinks = updatedHyperlinks;\r\n\t\treturn this.getHyperlinks();\r\n\t}\r\n\t\r\n\tasync deleteHyperlink(hyperlink) {\r\n\t\tif(!hyperlink.id) {\r\n\t\t\tthrow new Error(this.ERROR.DELETE);\r\n\t\t}\r\n\r\n\t\t// update in-memory data (piggyback on update)\r\n\t\tconst deletedHyperlink = {\r\n\t\t\t...hyperlink,\r\n\t\t\tdeleted: true\r\n\t\t}\r\n\t\treturn await this.updateHyperlink(deletedHyperlink);\r\n\t}\r\n\r\n\tgetHyperlinksArraySorted() {\r\n\t\treturn Object.entries(this.hyperlinks).map(e => e[1]).sort(this.sortDescByISOTimestamp);\r\n\t}\r\n\r\n\t// generate simple unique identifier\r\n\tgenerateUid() {\r\n\t\tvar uid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n\t\treturn uid;\r\n\t}\r\n\r\n\tgetISOTimestamp() {\r\n\t\treturn (new Date()).toISOString();\r\n\t}\r\n\r\n\tsortDescByISOTimestamp(a, b) {\r\n\t\treturn (a.createdOn > b.createdOn) ? -1 : ((a.createdOn < b.createdOn) ? 1 : 0);\r\n\t}\r\n\r\n\t\r\n\t// FETCH AND SYNC\r\n\r\n\tasync syncHyperlinks() {\r\n\t\tconst unsyncedHyperlinks = this.getHyperlinksArraySorted().filter(hyperlink => hyperlink.dirty);\r\n\t\tfor(var i = 0; i < unsyncedHyperlinks.length; i++) {\r\n\t\t\tconst hyperlink = unsyncedHyperlinks[i];\r\n\t\t\tconst syncedHyperlink = DataServer && await DataServer.addOrUpdateHyperlink(hyperlink);\r\n\t\t\tif(syncedHyperlink) {\r\n\t\t\t\tthis.updateSyncedHyperlink(syncedHyperlink);\r\n\t\t\t\tDataLocal && await DataLocal.addOrUpdateHyperlink(syncedHyperlink);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.getHyperlinks();\r\n\t}\r\n\r\n\tasync updateSyncedHyperlink(hyperlink) {\r\n\t\t// update in-memory data\r\n\t\tlet updatedHyperlinks = {\r\n\t\t\t...this.hyperlinks\r\n\t\t};\r\n\t\tupdatedHyperlinks[hyperlink.id] = hyperlink;\r\n\t\tthis.hyperlinks = updatedHyperlinks;\r\n\t}\r\n\r\n\tasync fetchHyperlinks() {\r\n\t\tawait this.loadLocalHyperlinks();\r\n\t\tawait this.loadServerHyperlinks();\r\n\t\treturn this.getHyperlinks();\r\n\t}\r\n\r\n\tasync loadLocalHyperlinks() {\r\n\t\tDataLocal && await DataLocal.initIndexedDb();\r\n\t\tconst hyperlinks = DataLocal && await DataLocal.getHyperlinks();\r\n\t\tif(!hyperlinks)\r\n\t\t\treturn;\r\n\t\tthis.hyperlinks = hyperlinks;\r\n\t}\r\n\r\n\tasync loadServerHyperlinks() {\r\n\t\tconst hyperlinks = DataServer && await DataServer.getHyperlinks();\r\n\t\tif(!hyperlinks)\r\n\t\t\treturn;\r\n\t\tthis.hyperlinks = hyperlinks;\r\n\t}\r\n\r\n\t// For testing -- unit, implementation or end-to-end\r\n\tasync initMockHyperlinks(mockHyperlinks) {\r\n\t\tthis.hyperlinks = mockHyperlinks;\r\n\t\tDataLocal && await this.loadLocalHyperlinks();\r\n\t}\r\n\r\n\t// For testing -- unit, implementation or end-to-end\r\n\tasync resetMockHyperlinks() {\r\n\t\tDataLocal && await DataLocal.deleteIndexedDb();\r\n\t\tthis.hyperlinks = {};\r\n\t}\r\n\r\n}\r\n\r\nexport default new Data();\r\n","const linkListErrors = {\r\n\tREAD: 'Could not load hyperlinks',\r\n\tSYNC: 'Could not sync hyperlinks',\r\n\tCREATE: 'Could not add hyperlink',\r\n\tUPDATE: 'Could not update hyperlink',\r\n\tDELETE: 'Could not delete hyperlink'\r\n};\r\n\r\nexport { linkListErrors };\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport LinkListItemAdd from '../../components/LinkListItemAdd/LinkListItemAdd';\r\nimport LinkListItem from '../../components/LinkListItem/LinkListItem';\r\nimport Data from \"../../services/Data/Data\";\r\nimport { linkListErrors } from './LinkListContants';\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0\r\n\t},\r\n\tprogressBar: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: '100%'\r\n\t},\r\n\tprogressBarHidden: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: '100%',\r\n\t\topacity: 0\r\n\t}\r\n}));\r\n\r\nexport default function LinkList() {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateHyperlinks, setStateHyperlinks] = React.useState([]);\r\n\r\n\tconst [isSyncing, setIsSyncing] = React.useState(false);\r\n\tconst [openSnackbarForError, setOpenSnackbarForError] = React.useState(false);\r\n\tconst [errorMessage, setErrorMessage] = React.useState('');\r\n\r\n\tconst fetchHyperlinks = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsSyncing(true);\r\n\t\t\tconst hyperlinks = await Data.fetchHyperlinks();\r\n\t\t\tsetStateHyperlinks(hyperlinks);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tshowErrorMessage(linkListErrors.READ);\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tawait syncHyperlinks();\r\n\t};\r\n\r\n\t// componentDidMount / componentDidUpdate  (on every render)\r\n\t// React.useEffect(() => {\r\n\t// \tfetchHyperlinks();\r\n\t// }, [fetchHyperlinks]);\r\n\r\n\t// componentDidMount / componentDidUpdate\r\n\tReact.useEffect(() => {\r\n\t\tfetchHyperlinks();\r\n\t}, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\t\r\n\t// // componentDidMount\r\n\t// React.useEffect(fetchHyperlinks, []);\r\n\r\n\tconst syncHyperlinks = async () => {\r\n\t\ttry {\r\n\t\t\tsetIsSyncing(true);\r\n\t\t\tconst hyperlinks = await Data.syncHyperlinks();\r\n\t\t\tsetStateHyperlinks(hyperlinks);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tshowErrorMessage(linkListErrors.SYNC);\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tsetIsSyncing(false);\r\n\t\t}\r\n\t}\r\n\tconst createHyperlink = async (hyperlink) => {\r\n\t\ttry {\r\n\t\t\tconst hyperlinks = await Data.createHyperlink(hyperlink);\r\n\t\t\tsetStateHyperlinks(hyperlinks);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tshowErrorMessage(linkListErrors.CREATE);\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tawait syncHyperlinks();\r\n\t};\r\n\tconst updateHyperlink = async (hyperlink) => {\r\n\t\ttry {\r\n\t\t\tconst hyperlinks = await Data.updateHyperlink(hyperlink);\r\n\t\t\tsetStateHyperlinks(hyperlinks);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tshowErrorMessage(linkListErrors.UPDATE);\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tawait syncHyperlinks();\r\n\t};\r\n\tconst deleteHyperlink = async (hyperlink) => {\r\n\t\ttry {\r\n\t\t\tconst hyperlinks = await Data.deleteHyperlink(hyperlink);\r\n\t\t\tsetStateHyperlinks(hyperlinks);\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tshowErrorMessage(linkListErrors.DELETE);\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t\tawait syncHyperlinks();\r\n\t};\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t  if (reason === 'clickaway') {\r\n\t\treturn;\r\n\t  }  \r\n\t  setOpenSnackbarForError(false);\r\n\t};\r\n\r\n\tconst showErrorMessage = (message) => {\r\n\t\tsetOpenSnackbarForError(false);\r\n\t\tsetOpenSnackbarForError(true);\r\n\t\tsetErrorMessage(message);\r\n\t}\r\n\r\n\tconst linkListItemEls = stateHyperlinks.map(hyperlink => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={hyperlink.id}>\r\n\t\t\t\t<LinkListItem\r\n\t\t\t\t\tid={hyperlink.id}\r\n\t\t\t\t\ttitle={hyperlink.title}\r\n\t\t\t\t\turl={hyperlink.url}\r\n\t\t\t\t\tvisited={hyperlink.visited}\r\n\t\t\t\t\tonUpdateHyperlink={(hyperlink) => updateHyperlink(hyperlink)}\r\n\t\t\t\t\tonDeleteHyperlink={(hyperlink) => deleteHyperlink(hyperlink)}\r\n\t\t\t\t></LinkListItem>\r\n\t\t\t\t<Divider />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Snackbar open={openSnackbarForError} autoHideDuration={6000} onClose={handleClose}>\r\n\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\t{errorMessage}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t\t{ isSyncing ? <LinearProgress className={classes.progressBar} /> : <LinearProgress className={classes.progressBarHidden} /> }\r\n\t\t\t<List className={classes.root}>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<LinkListItemAdd\r\n\t\t\t\t\tonSaveNewHyperlink={(hyperlink) => createHyperlink(hyperlink)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{linkListItemEls}\r\n\t\t\t</List>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LinkList from './components/LinkList/LinkList';\n\nconst useStyles = makeStyles((theme) => ({\n\tapp: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tappHeader: {\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t},\n\tappHeaderH1: {\n\t\tmarginTop: 2,\n\t\tmarginBottom: -10\n\t},\n\tappBody: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.palette.background.default, //theme.palette.background.paper\n\t},\n\tappFooter: {\n\t\tpaddingTop: 8,\n\t\tpaddingBottom: 8,\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst year = (new Date()).getFullYear();\n\treturn (\n\t\t<Box className={classes.app}>\n\t\t\t<header className={classes.appHeader}>\n\t\t\t\t<h1 className={classes.appHeaderH1}>Save Links for Later</h1>\n\t\t\t\t<p>What do you want to read, watch, play or listen to?</p>\n\t\t\t</header>\n\t\t\t<Box className={classes.appBody}>\n\t\t\t\t<LinkList />\n\t\t\t</Box>\n\t\t\t<footer className={classes.appFooter}>\n\t\t\t\tCopyright &copy; {year}\n\t\t\t</footer>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}