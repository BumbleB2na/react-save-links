{"version":3,"sources":["components/LinkListItemSaveDialog/LinkListItemSaveDialog.js","components/LinkListItemAdd/LinkListItemAdd.js","components/LinkListItem/LinkListItem.js","Data.js","DataMock.js","components/LinkList/LinkList.js","App.js","serviceWorker.js","index.js"],"names":["LinkListItemSaveDialog","props","useState","title","stateTitle","setStateTitle","url","stateUrl","setStateUrl","stateUrlError","setStateUrlError","handleClickSaveForLaterButton","trim","isUrlValid","id","updateHyperlink","saveNewHyperlink","handleClose","length","substr","updatesToHyperlink","createHyperlinkFromState","onUpdateHyperlink","newHyperlink","onSaveNewHyperlink","hyperlink","onCloseDialog","Dialog","aria-labelledby","open","onEnter","onClose","DialogTitle","DialogContent","DialogContentText","TextField","margin","type","fullWidth","label","value","onChange","e","target","autoFocus","required","error","helperText","onKeyUp","key","DialogActions","Button","color","onClick","useStyles","makeStyles","theme","addHyperlink","palette","text","hint","LinkListItemAdd","classes","stateIsDialogOpen","setStateIsDialogOpen","Fragment","ListItem","className","button","component","ListItemIcon","ListItemText","hyperlinkVisited","textDecorationLine","LinkListItem","ListItemEditable","ListItemTextLink","visited","onUpdateHyperlinkAsVisited","updatedHyperlink","ListItemSecondaryAction","IconButton","deletedHyperlink","onDeleteHyperlink","children","updateHyperlinkAsVisited","Link","href","rel","stopPropagation","_hyperlinks","mockHyperlinks","createdOn","Object","assign","Promise","resolve","reject","setTimeout","sortedHyperlinks","getHyperlinksArraySorted","generateUid","getISOTimestamp","updatedHyperlinks","entries","map","sort","this","sortDescByISOTimestamp","Math","random","toString","substring","Date","toISOString","a","b","root","paddingTop","paddingBottom","LinkList","stateHyperlinks","setStateHyperlinks","useEffect","fetchHyperlinks","Data","getHyperlinks","hyperlinks","createHyperlink","deleteHyperlink","linkListItemEls","Divider","List","app","minHeight","display","flexDirection","appHeader","paddingLeft","paddingRight","fontSize","backgroundColor","appHeaderH1","marginTop","marginBottom","appBody","flex","background","default","appFooter","App","year","getFullYear","Box","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d5aa1dc4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function LinkListItemSaveDialog(props) {\r\n\tconst DEFAULT_TITLE = '';\r\n\tconst DEFAULT_URL = 'https://';\r\n\r\n\t// constructor\r\n\tconst [stateTitle, setStateTitle] = useState(props.title || DEFAULT_TITLE);\r\n\tconst [stateUrl, setStateUrl] = useState(props.url || DEFAULT_URL);\r\n\tconst [stateUrlError, setStateUrlError] = useState(null);\r\n\t\r\n\tconst resetInputState = () => {\r\n\t\tsetStateTitle(props.title || DEFAULT_TITLE);\r\n\t\tsetStateUrl(props.url || DEFAULT_URL);\r\n\t\tsetStateUrlError(null);\r\n\t};\r\n\tconst handleClickSaveForLaterButton = () => {\r\n\t\tconst isUrlEmpty = stateUrl.trim() === '';\r\n\t\tif(isUrlEmpty) {\r\n\t\t\tsetStateUrlError('You must enter a hyperlink to be saved for later. E.g. \"https://example.com\"');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isTheUrlValid = isUrlValid(stateUrl);\r\n\t\tif(!isTheUrlValid) {\r\n\t\t\tsetStateUrlError('The hyperlink you entered is not valid. Valid example: \"https://example.com\"');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetStateUrlError(null);\r\n\t\tif(props.id)\r\n\t\t\tupdateHyperlink();\r\n\t\telse\r\n\t\t\tsaveNewHyperlink();\r\n\t\thandleClose();\r\n\t};\r\n\tconst isUrlValid = (url) => {\r\n\t\tvar isValid = url.length > 9 && (url.substr(0, 7) === 'http://' || url.substr(0, 8) === 'https://');\r\n\t\treturn isValid;\r\n\t};\r\n\tconst updateHyperlink = () => {\r\n\t\tlet updatesToHyperlink = {\r\n\t\t\tid: props.id,\r\n\t\t\t...createHyperlinkFromState()\r\n\t\t};\r\n\t\tprops.onUpdateHyperlink(updatesToHyperlink);\r\n\t};\r\n\tconst saveNewHyperlink = () => {\r\n\t\tlet newHyperlink = createHyperlinkFromState();\r\n\t\tprops.onSaveNewHyperlink(newHyperlink);\r\n\t};\r\n\tconst createHyperlinkFromState = () => {\t\t\r\n\t\tlet hyperlink = {\r\n\t\t\turl: stateUrl.trim()\r\n\t\t}\r\n\t\tif(stateTitle)\r\n\t\t\thyperlink.title = stateTitle.trim();\r\n\t\treturn hyperlink;\r\n\t};\r\n\tconst handleKeyUpUrl = (e) => {\r\n\t\tconst isEnterKey = (e.key === 'Enter');\r\n\t\tif(isEnterKey)\r\n\t\t\thandleClickSaveForLaterButton();\r\n\t};\r\n\tconst handleOpen = () => {\r\n\t\tresetInputState();\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tprops.onCloseDialog();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog \r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\topen={props.open}\r\n\t\t\tonEnter={handleOpen}\r\n\t\t\tonClose={handleClose}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">Save For Later</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText>\r\n\t\t\t\t\tWhat do you want to read, watch, play or listen to?\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tmargin=\"dense\" type=\"text\" fullWidth \r\n\t\t\t\t\tid=\"title\" \r\n\t\t\t\t\tlabel=\"Title (optional)\"\r\n\t\t\t\t\tvalue={stateTitle} \r\n\t\t\t\t\tonChange={e => setStateTitle(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tautoFocus margin=\"dense\" type=\"text\" required fullWidth\r\n\t\t\t\t\terror={stateUrlError}\r\n\t\t\t\t\thelperText={(stateUrlError) ? stateUrlError : \" \"}\r\n\t\t\t\t\tid=\"url\" \r\n\t\t\t\t\tlabel=\"Url\"\r\n\t\t\t\t\tonKeyUp={handleKeyUpUrl}\r\n\t\t\t\t\tvalue={stateUrl}\r\n\t\t\t\t\tonChange={e => setStateUrl(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClose} \r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClickSaveForLaterButton}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Link\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport LinkListItemSaveDialog from '../../components/LinkListItemSaveDialog/LinkListItemSaveDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddHyperlink: {\r\n\t\tcolor: theme.palette.text.hint\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItemAdd(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = useState(false);\r\n\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleCloseDialog = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ListItem \r\n\t\t\t\tclassName={classes.addHyperlink}\r\n\t\t\t\tbutton component=\"button\"\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\tNew Hyperlink\r\n\t\t\t\t</ListItemText>\r\n\t\t\t</ListItem>\r\n\t\t\t<LinkListItemSaveDialog\r\n\t\t\t\turl=\"https://\"\r\n\t\t\t\topen={stateIsDialogOpen}\r\n\t\t\t\tonCloseDialog={handleCloseDialog}\r\n\t\t\t\tonSaveNewHyperlink={props.onSaveNewHyperlink}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport LinkListItemSaveDialog from '../../components/LinkListItemSaveDialog/LinkListItemSaveDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\thyperlink: {\r\n\t\tcolor: 'blue'\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItem(props) {\r\n\tconst handleHyperlinkClicked = () => {\r\n\t\tconst updatedHyperlink = {\r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\r\n\t\t};\r\n\t\tprops.onUpdateHyperlink(updatedHyperlink);\r\n\t}\r\n\tconst handleDeleteClicked = () => {\r\n\t\tconst deletedHyperlink = {\r\n\t\t\tid: props.id\r\n\t\t};\r\n\t\tprops.onDeleteHyperlink(deletedHyperlink);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItemEditable\r\n\t\t\tid={props.id}\r\n\t\t\ttitle={props.title}\r\n\t\t\turl={props.url}\r\n\t\t\tonUpdateHyperlink={props.onUpdateHyperlink}\r\n\t\t>\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<LinkIcon />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemTextLink\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttitle={props.title}\r\n\t\t\t\turl={props.url}\r\n\t\t\t\tvisited={props.visited}\r\n\t\t\t\tonUpdateHyperlinkAsVisited={handleHyperlinkClicked}\r\n\t\t\t/>\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tonClick={handleDeleteClicked}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItemEditable>\r\n\t);\r\n}\r\n\r\nfunction ListItemEditable(props) {\r\n\tconst classes = useStyles();\r\n\t\r\n\t// constructor\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = useState(false);\r\n\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleCloseDialog = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ListItem \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton component=\"button\"\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t{props.children}\r\n\t\t\t</ListItem>\r\n\t\t\t<LinkListItemSaveDialog\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttitle={props.title}\r\n\t\t\t\turl={props.url}\r\n\t\t\t\topen={stateIsDialogOpen}\r\n\t\t\t\tonCloseDialog={handleCloseDialog}\r\n\t\t\t\tonUpdateHyperlink={props.onUpdateHyperlink}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction ListItemTextLink(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = (e) => {\r\n\t\tupdateHyperlinkAsVisited();\r\n\t\te.stopPropagation();\r\n\t};\r\n\tconst updateHyperlinkAsVisited = () => {\r\n\t\tconst updatedHyperlink = { \r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\t\r\n\t\t};\r\n\t\tprops.onUpdateHyperlinkAsVisited(updatedHyperlink);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListItemText>\r\n\t\t\t<Link \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton=\"true\" \r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\thref={props.url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tonClick={handleClickHyperlink}\r\n\t\t\t>\r\n\t\t\t\t{props.title || props.url}\r\n\t\t\t</Link>\r\n\t\t</ListItemText>\r\n\t);\r\n}\r\n","import { mockHyperlinks } from \"./DataMock\";\r\n\r\nlet _hyperlinks;\r\n\r\nclass Data {\r\n\r\n\tconstructor() {\r\n\t\t_hyperlinks = [];\r\n\t}\r\n\r\n\t// Simulate existing data stored on a server\r\n\tinitMockHyperlinks() {\r\n\t\t_hyperlinks = Object.assign({}, mockHyperlinks);  // make copy of mock data\r\n\t}\r\n\r\n\t// Simulate calls to server\r\n\tgetHyperlinks() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreateHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst id = this.generateUid();\r\n\t\t\t\tconst newHyperlink = {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\t...hyperlink,\r\n\t\t\t\t\tcreatedOn: this.getISOTimestamp()\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks,\r\n\t\t\t\t\t[id] : newHyperlink\r\n\t\t\t\t};\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks\r\n\t\t\t\t};\r\n\t\t\t\tupdatedHyperlinks[hyperlink.id] = Object.assign(updatedHyperlinks[hyperlink.id], hyperlink);\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tdeleteHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks\r\n\t\t\t\t};\r\n\t\t\t\tdelete updatedHyperlinks[hyperlink.id];\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\r\n\tgetHyperlinksArraySorted() {\r\n\t\treturn Object.entries(_hyperlinks).map(e => e[1]).sort(this.sortDescByISOTimestamp);\r\n\t}\r\n\r\n\t// generate simple unique identifier\r\n\tgenerateUid() {\r\n\t\tvar uid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n\t\treturn uid;\r\n\t}\r\n\r\n\tgetISOTimestamp() {\r\n\t\treturn (new Date()).toISOString();\r\n\t}\r\n\r\n\tsortDescByISOTimestamp(a, b) {\r\n\t\treturn (a.createdOn > b.createdOn) ? -1 : ((a.createdOn < b.createdOn) ? 1 : 0);\r\n\t}\r\n}\r\n\r\nexport default new Data();\r\n","// Mock data from database\r\nconst mockHyperlinks = {\r\n\t\"3dbd8r9v65gy0iyzrgdyr\" : {\r\n\t\tid: \"3dbd8r9v65gy0iyzrgdyr\",\r\n\t\ttitle: \"Example.com\",\r\n\t\turl: \"https://example.com\",\r\n\t\tcreatedOn: \"2020-03-31T01:11:11.948Z\"\r\n\t},\r\n\t\"7rm3t370equwsquzsz0nn\": {\r\n\t\tid: \"7rm3t370equwsquzsz0nn\",\r\n\t\turl: \"https://google.com\",\r\n\t\tvisited: true,\r\n\t\tcreatedOn: \"2020-03-31T02:22:22.948Z\"\r\n\t}\r\n};\r\n  \r\nexport { mockHyperlinks };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LinkListItemAdd from '../../components/LinkListItemAdd/LinkListItemAdd';\r\nimport LinkListItem from '../../components/LinkListItem/LinkListItem';\r\nimport Data from \"../../Data\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0\r\n\t}\r\n}));\r\n\r\nexport default function LinkList() {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateHyperlinks, setStateHyperlinks] = useState([]);\r\n\t\r\n\t// componentDidMount / componentDidUpdate\r\n\tuseEffect(() => {\r\n\t\tfetchHyperlinks();\r\n\t}, []);\r\n\r\n\tconst fetchHyperlinks = async () => {\r\n\t\tconst hyperlinks = await Data.getHyperlinks();\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst createHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.createHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst updateHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.updateHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst deleteHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.deleteHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\r\n\tconst linkListItemEls = stateHyperlinks.map(hyperlink => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={hyperlink.id}>\r\n\t\t\t\t<LinkListItem\r\n\t\t\t\t\tid={hyperlink.id}\r\n\t\t\t\t\ttitle={hyperlink.title}\r\n\t\t\t\t\turl={hyperlink.url}\r\n\t\t\t\t\tvisited={hyperlink.visited}\r\n\t\t\t\t\tonUpdateHyperlink={(hyperlink) => updateHyperlink(hyperlink)}\r\n\t\t\t\t\tonDeleteHyperlink={(hyperlink) => deleteHyperlink(hyperlink)}\r\n\t\t\t\t></LinkListItem>\r\n\t\t\t\t<Divider />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<List className={classes.root}>\r\n\t\t\t<LinkListItemAdd\r\n\t\t\t\tonSaveNewHyperlink={(hyperlink) => createHyperlink(hyperlink)}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t{linkListItemEls}\r\n\t\t</List>\r\n\t);\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LinkList from './components/LinkList/LinkList';\n\nconst useStyles = makeStyles((theme) => ({\n\tapp: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tappHeader: {\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t},\n\tappHeaderH1: {\n\t\tmarginTop: 2,\n\t\tmarginBottom: -10\n\t},\n\tappBody: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.palette.background.default, //theme.palette.background.paper\n\t},\n\tappFooter: {\n\t\tpaddingTop: 8,\n\t\tpaddingBottom: 8,\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst year = (new Date()).getFullYear();\n\treturn (\n\t\t<Box className={classes.app}>\n\t\t\t<header className={classes.appHeader}>\n\t\t\t\t<h1 className={classes.appHeaderH1}>Save Links for Later</h1>\n\t\t\t\t<p>What do you want to read, watch, play or listen to?</p>\n\t\t\t</header>\n\t\t\t<Box className={classes.appBody}>\n\t\t\t\t<LinkList />\n\t\t\t</Box>\n\t\t\t<footer className={classes.appFooter}>\n\t\t\t\tCopyright &copy; {year}\n\t\t\t</footer>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}