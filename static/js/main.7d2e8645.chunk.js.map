{"version":3,"sources":["components/LinkListItemAdd/LinkListItemAdd.js","components/LinkListItem/LinkListItem.js","components/LinkList/LinkList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","newHyperlink","color","palette","text","hint","hyperlinkVisited","textDecorationLine","ListItemAddButtonDialog","props","classes","React","useState","open","setOpen","handleClickAdd","alert","handleClose","ListItem","className","button","component","onClick","ListItemIcon","ListItemText","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","margin","label","type","fullWidth","autoFocus","required","onKeyUp","e","key","DialogActions","Button","LinkListItemAdd","state","title","url","visited","Component","hyperlink","ListItemButton","children","ListItemTextLink","Link","href","target","rel","stopPropagation","handleClickDelete","LinkListItem","this","ListItemSecondaryAction","IconButton","root","paddingTop","paddingBottom","LinkList","List","Divider","app","minHeight","display","flexDirection","appHeader","paddingLeft","paddingRight","fontSize","backgroundColor","appHeaderH1","marginTop","marginBottom","appBody","flex","background","default","appFooter","App","Box","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7d2e8645.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// Dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tnewHyperlink: {\r\n\t\tcolor: theme.palette.text.hint\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nfunction ListItemAddButtonDialog(props) {\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClickAdd = () => {\r\n\t\talert('TODO: Validate input and add new hyperlink');\r\n\t\thandleClose();\r\n\t};\r\n\tconst handleKeyUpUrl = (e) => {\r\n\t\tconst isEnterKey = (e.key === 'Enter');\r\n\t\tif(isEnterKey)\r\n\t\t\thandleClickAdd();\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ListItem className={classes.newHyperlink} button component=\"button\" {...props}\r\n\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t>\t\t\t\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\tNew Hyperlink\r\n\t\t\t\t</ListItemText>\r\n\t\t\t</ListItem>\r\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">New Hyperlink</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText>\r\n\t\t\t\t\t\tWhat do you want to read, watch or listen to?\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\tlabel=\"Title (optional)\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tid=\"url\"\r\n\t\t\t\t\t\tlabel=\"Url\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tonKeyUp={handleKeyUpUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleClickAdd} color=\"primary\">\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class LinkListItemAdd extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: this.props.title || '',\r\n\t\t\turl: this.props.url || 'https://',\r\n\t\t\tvisited: this.props.visited || false\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ListItemAddButtonDialog />\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\thyperlink: {\r\n\t\tcolor: 'blue'\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nfunction ListItemButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = () => {\r\n\t\talert('TODO: Open dialog to edit existing hyperlink');\r\n\t\treturn false;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem className={props.visited ? classes.hyperlinkVisited : classes.hyperlink} button component=\"button\" {...props}\r\n\t\t\tonClick={handleClickHyperlink}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</ListItem>\r\n\t);\r\n}\r\nfunction ListItemTextLink(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = (e) => {\r\n\t\talert('TODO: Update hyperlink to set it to visited. Now opening hyperlink in new tab...');\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItemText>\r\n\t\t\t<Link \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton component=\"a\"\r\n\t\t\t\thref={props.url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tonClick={handleClickHyperlink}\r\n\t\t\t>\r\n\t\t\t\t{props.title || props.url}\r\n\t\t\t</Link>\r\n\t\t</ListItemText>\r\n\t);\r\n}\r\n\r\nconst handleClickDelete = () => {\r\n\talert('TODO: delete hyperlink');\r\n};\r\n\r\nexport default class LinkListItem extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttitle: this.props.title || '',\r\n\t\t\turl: this.props.url || 'https://',\r\n\t\t\tvisited: this.props.visited || false\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ListItemButton>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<LinkIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemTextLink\r\n\t\t\t\t\ttitle={this.state.title}\r\n\t\t\t\t\turl={this.state.url}\r\n\t\t\t\t\tvisited={this.state.visited}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={handleClickDelete}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t</ListItemButton>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LinkListItemAdd from '../../components/LinkListItemAdd/LinkListItemAdd';\r\nimport LinkListItem from '../../components/LinkListItem/LinkListItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0\r\n\t}\r\n}));\r\n\r\nexport default function LinkList() {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<List className={classes.root}>\r\n\t\t\t<LinkListItemAdd />\r\n\t\t\t<Divider />\r\n\t\t\t<LinkListItem\r\n\t\t\t\ttitle=\"Example.com\"\r\n\t\t\t\turl=\"https://example.com\"\r\n\t\t\t></LinkListItem>\r\n\t\t\t<Divider />\r\n\t\t\t<LinkListItem\r\n\t\t\t\turl=\"https://google.com\"\r\n\t\t\t\tvisited=\"true\"\r\n\t\t\t></LinkListItem>\r\n\t\t\t<Divider />\r\n\t\t</List>\r\n\t);\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LinkList from './components/LinkList/LinkList';\n\nconst useStyles = makeStyles((theme) => ({\n\tapp: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tappHeader: {\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t},\n\tappHeaderH1: {\n\t\tmarginTop: 2,\n\t\tmarginBottom: -10\n\t},\n\tappBody: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.palette.background.default, //theme.palette.background.paper\n\t},\n\tappFooter: {\n\t\tpaddingTop: 8,\n\t\tpaddingBottom: 8,\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Box className={classes.app}>\n\t\t\t<header className={classes.appHeader}>\n\t\t\t\t<h1 className={classes.appHeaderH1}>Save Links for Later</h1>\n\t\t\t\t<p>What do you want to read, watch or listen to?</p>\n\t\t\t</header>\n\t\t\t<Box className={classes.appBody}>\n\t\t\t\t<LinkList />\n\t\t\t</Box>\n\t\t\t<footer className={classes.appFooter}>\n\t\t\t\tCopyright &copy; 2020\n\t\t\t</footer>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}