{"version":3,"sources":["components/LinkListItemAdd/LinkListItemAdd.js","components/LinkListItem/LinkListItem.js","Data.js","DataMock.js","components/LinkList/LinkList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","addHyperlink","color","palette","text","hint","LinkListItemAdd","props","classes","useState","stateIsDialogOpen","setStateIsDialogOpen","Fragment","ListItem","className","button","component","onClick","ListItemIcon","ListItemText","LinkListItemAddDialog","open","onCloseDialog","onSaveNewHyperlink","title","stateTitle","setStateTitle","url","stateUrl","setStateUrl","stateUrlError","setStateUrlError","handleClickSaveForLaterButton","trim","isUrlValid","saveNewHyperlink","handleClose","length","substr","newHyperlink","createHyperlinkFromState","hyperlink","setTimeout","Dialog","aria-labelledby","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","margin","type","fullWidth","label","value","onChange","e","target","autoFocus","required","error","helperText","onKeyUp","key","DialogActions","Button","hyperlinkVisited","textDecorationLine","LinkListItem","ListItemButton","ListItemTextLink","visited","onUpdateHyperlinkAsVisited","updatedHyperlink","ListItemSecondaryAction","IconButton","deletedHyperlink","onDeleteHyperlink","alert","children","updateHyperlinkAsVisited","Link","href","rel","stopPropagation","_hyperlinks","mockHyperlinks","createdOn","Object","assign","Promise","resolve","reject","sortedHyperlinks","getHyperlinksArraySorted","generateUid","getISOTimestamp","updatedHyperlinks","entries","map","sort","this","sortDescByISOTimestamp","Math","random","toString","substring","Date","toISOString","a","b","root","paddingTop","paddingBottom","LinkList","stateHyperlinks","setStateHyperlinks","useEffect","fetchHyperlinks","Data","getHyperlinks","hyperlinks","createHyperlink","updateHyperlink","deleteHyperlink","linkListItemEls","Divider","List","app","minHeight","display","flexDirection","appHeader","paddingLeft","paddingRight","fontSize","backgroundColor","appHeaderH1","marginTop","marginBottom","appBody","flex","background","default","appFooter","App","Box","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b0593fb2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n// Dialog\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\taddHyperlink: {\r\n\t\tcolor: theme.palette.text.hint\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItemAdd(props) {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateIsDialogOpen, setStateIsDialogOpen] = useState(false);\r\n\t\r\n\tconst handleClickToOpenDialog = () => {\r\n\t\tsetStateIsDialogOpen(true);\r\n\t};\r\n\tconst handleCloseDialog = () => {\r\n\t\tsetStateIsDialogOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ListItem \r\n\t\t\t\tclassName={classes.addHyperlink} button component=\"button\"\r\n\t\t\t\tonClick={handleClickToOpenDialog}\r\n\t\t\t>\r\n\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</ListItemIcon>\r\n\t\t\t\t<ListItemText>\r\n\t\t\t\t\tNew Hyperlink\r\n\t\t\t\t</ListItemText>\r\n\t\t\t</ListItem>\r\n\t\t\t<LinkListItemAddDialog\r\n\t\t\t\topen={stateIsDialogOpen}\r\n\t\t\t\tonCloseDialog={handleCloseDialog}\r\n\t\t\t\tonSaveNewHyperlink={props.onSaveNewHyperlink}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nfunction LinkListItemAddDialog(props) {\r\n\tconst DEFAULT_TITLE = '';\r\n\tconst DEFAULT_URL = 'https://';\r\n\r\n\t// constructor\r\n\tconst [stateTitle, setStateTitle] = useState(props.title || DEFAULT_TITLE);\r\n\tconst [stateUrl, setStateUrl] = useState(props.url || DEFAULT_URL);\r\n\tconst [stateUrlError, setStateUrlError] = useState(null);\r\n\t\r\n\tconst resetInputState = () => {\r\n\t\tsetStateTitle(props.title || DEFAULT_TITLE);\r\n\t\tsetStateUrl(props.url || DEFAULT_URL);\r\n\t\tsetStateUrlError(null);\r\n\t};\r\n\tconst handleClickSaveForLaterButton = () => {\r\n\t\tconst isUrlEmpty = stateUrl.trim() === '';\r\n\t\tif(isUrlEmpty) {\r\n\t\t\tsetStateUrlError('You must enter a hyperlink to be saved for later. E.g. \"https://example.com\"');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isTheUrlValid = isUrlValid(stateUrl);\r\n\t\tif(!isTheUrlValid) {\r\n\t\t\tsetStateUrlError('The hyperlink you entered is not valid. Valid example: \"https://example.com\"');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetStateUrlError(null);\r\n\t\tsaveNewHyperlink();\r\n\t\thandleClose();\r\n\t};\r\n\tconst isUrlValid = (url) => {\r\n\t\tvar isValid = url.length > 9 && (url.substr(0, 7) === 'http://' || url.substr(0, 8) === 'https://');\r\n\t\treturn isValid;\r\n\t};\r\n\tconst saveNewHyperlink = () => {\r\n\t\tlet newHyperlink = createHyperlinkFromState();\r\n\t\tprops.onSaveNewHyperlink(newHyperlink);\r\n\t};\r\n\tconst createHyperlinkFromState = () => {\t\t\r\n\t\tlet hyperlink = {\r\n\t\t\ttitle: (stateTitle) ? stateTitle.trim() : DEFAULT_TITLE,\r\n\t\t\turl: stateUrl.trim()\r\n\t\t}\r\n\t\tif(stateTitle)\r\n\t\t\thyperlink.title = stateTitle;\r\n\t\treturn hyperlink;\r\n\t};\r\n\tconst handleKeyUpUrl = (e) => {\r\n\t\tconst isEnterKey = (e.key === 'Enter');\r\n\t\tif(isEnterKey)\r\n\t\t\thandleClickSaveForLaterButton();\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tprops.onCloseDialog();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tresetInputState();\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog \r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={handleClose}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"form-dialog-title\">Save For Later</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText>\r\n\t\t\t\t\tWhat do you want to read, watch, play or listen to?\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tmargin=\"dense\" type=\"text\" fullWidth \r\n\t\t\t\t\tid=\"title\" \r\n\t\t\t\t\tlabel=\"Title (optional)\"\r\n\t\t\t\t\tvalue={stateTitle} \r\n\t\t\t\t\tonChange={e => setStateTitle(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tautoFocus margin=\"dense\" type=\"text\" required fullWidth\r\n\t\t\t\t\terror={stateUrlError}\r\n\t\t\t\t\thelperText={(stateUrlError) ? stateUrlError : \" \"}\r\n\t\t\t\t\tid=\"url\" \r\n\t\t\t\t\tlabel=\"Url\"\r\n\t\t\t\t\tonKeyUp={handleKeyUpUrl}\r\n\t\t\t\t\tvalue={stateUrl}\r\n\t\t\t\t\tonChange={e => setStateUrl(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClose} \r\n\t\t\t\t>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tonClick={handleClickSaveForLaterButton}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Link\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\thyperlink: {\r\n\t\tcolor: 'blue'\r\n\t},\r\n\thyperlinkVisited: {\r\n\t\tcolor: 'purple',\r\n\t\ttextDecorationLine: 'line-through'\r\n\t},\r\n}));\r\n\r\nexport default function LinkListItem(props) {\r\n\tconst handleHyperlinkClicked = () => {\r\n\t\tconst updatedHyperlink = {\r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\r\n\t\t};\r\n\t\tprops.onUpdateHyperlinkAsVisited(updatedHyperlink);\r\n\t}\r\n\tconst handleDeleteClicked = () => {\r\n\t\tconst deletedHyperlink = {\r\n\t\t\tid: props.id\r\n\t\t};\r\n\t\tprops.onDeleteHyperlink(deletedHyperlink);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItemButton>\r\n\t\t\t<ListItemIcon>\r\n\t\t\t\t<LinkIcon />\r\n\t\t\t</ListItemIcon>\r\n\t\t\t<ListItemTextLink\r\n\t\t\t\tid={props.id}\r\n\t\t\t\ttitle={props.title}\r\n\t\t\t\turl={props.url}\r\n\t\t\t\tvisited={props.visited}\r\n\t\t\t\tonUpdateHyperlinkAsVisited={handleHyperlinkClicked}\r\n\t\t\t/>\r\n\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tonClick={handleDeleteClicked}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItemButton>\r\n\t);\r\n}\r\n\r\nfunction ListItemButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = () => {\r\n\t\talert('TODO: Open dialog to edit existing hyperlink');\r\n\t\treturn false;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem \r\n\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\tbutton component=\"button\"\r\n\t\t\tonClick={handleClickHyperlink}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</ListItem>\r\n\t);\r\n}\r\n\r\nfunction ListItemTextLink(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleClickHyperlink = (e) => {\r\n\t\tupdateHyperlinkAsVisited();\r\n\t\te.stopPropagation();\r\n\t};\r\n\tconst updateHyperlinkAsVisited = () => {\r\n\t\tconst updatedHyperlink = { \r\n\t\t\tid: props.id,\r\n\t\t\tvisited: true\t\r\n\t\t};\r\n\t\tprops.onUpdateHyperlinkAsVisited(updatedHyperlink);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ListItemText>\r\n\t\t\t<Link \r\n\t\t\t\tclassName={props.visited ? classes.hyperlinkVisited : classes.hyperlink} \r\n\t\t\t\tbutton=\"true\" \r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\thref={props.url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\tonClick={handleClickHyperlink}\r\n\t\t\t>\r\n\t\t\t\t{props.title || props.url}\r\n\t\t\t</Link>\r\n\t\t</ListItemText>\r\n\t);\r\n}\r\n","import { mockHyperlinks } from \"./DataMock\";\r\n\r\nlet _hyperlinks;\r\n\r\nclass Data {\r\n\r\n\tconstructor() {\r\n\t\t_hyperlinks = [];\r\n\t}\r\n\r\n\t// Simulate existing data stored on a server\r\n\tinitMockHyperlinks() {\r\n\t\t_hyperlinks = Object.assign({}, mockHyperlinks);  // make copy of mock data\r\n\t}\r\n\r\n\t// Simulate calls to server\r\n\tgetHyperlinks() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tcreateHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst id = this.generateUid();\r\n\t\t\t\tconst newHyperlink = {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\t...hyperlink,\r\n\t\t\t\t\tcreatedOn: this.getISOTimestamp()\r\n\t\t\t\t};\r\n\t\t\t\tconst updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks,\r\n\t\t\t\t\t[id] : newHyperlink\r\n\t\t\t\t};\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks\r\n\t\t\t\t};\r\n\t\t\t\tupdatedHyperlinks[hyperlink.id] = Object.assign(updatedHyperlinks[hyperlink.id], hyperlink);\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\t\r\n\tdeleteHyperlink(hyperlink) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet updatedHyperlinks = {\r\n\t\t\t\t\t..._hyperlinks\r\n\t\t\t\t};\r\n\t\t\t\tdelete updatedHyperlinks[hyperlink.id];\r\n\t\t\t\t_hyperlinks = updatedHyperlinks;\r\n\r\n\t\t\t\tconst sortedHyperlinks = this.getHyperlinksArraySorted();\r\n\t\t\t\tresolve(sortedHyperlinks);\r\n\t\t\t}, 500);\r\n\t\t});\r\n\t}\r\n\r\n\tgetHyperlinksArraySorted() {\r\n\t\treturn Object.entries(_hyperlinks).map(e => e[1]).sort(this.sortDescByISOTimestamp);\r\n\t}\r\n\r\n\t// generate simple unique identifier\r\n\tgenerateUid() {\r\n\t\tvar uid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n\t\treturn uid;\r\n\t}\r\n\r\n\tgetISOTimestamp() {\r\n\t\treturn (new Date()).toISOString();\r\n\t}\r\n\r\n\tsortDescByISOTimestamp(a, b) {\r\n\t\treturn (a.createdOn > b.createdOn) ? -1 : ((a.createdOn < b.createdOn) ? 1 : 0);\r\n\t}\r\n}\r\n\r\nexport default new Data();\r\n","// Mock data from database\r\nconst mockHyperlinks = {\r\n\t\"3dbd8r9v65gy0iyzrgdyr\" : {\r\n\t\tid: \"3dbd8r9v65gy0iyzrgdyr\",\r\n\t\ttitle: \"Example.com\",\r\n\t\turl: \"https://example.com\",\r\n\t\tcreatedOn: \"2020-03-31T01:11:11.948Z\"\r\n\t},\r\n\t\"7rm3t370equwsquzsz0nn\": {\r\n\t\tid: \"7rm3t370equwsquzsz0nn\",\r\n\t\turl: \"https://google.com\",\r\n\t\tvisited: true,\r\n\t\tcreatedOn: \"2020-03-31T02:22:22.948Z\"\r\n\t}\r\n};\r\n  \r\nexport { mockHyperlinks };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport LinkListItemAdd from '../../components/LinkListItemAdd/LinkListItemAdd';\r\nimport LinkListItem from '../../components/LinkListItem/LinkListItem';\r\nimport Data from \"../../Data\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: 0,\r\n\t\tpaddingBottom: 0\r\n\t}\r\n}));\r\n\r\nexport default function LinkList() {\r\n\tconst classes = useStyles();\r\n\r\n\t// constructor\r\n\tconst [stateHyperlinks, setStateHyperlinks] = useState([]);\r\n\t\r\n\t// componentDidMount / componentDidUpdate\r\n\tuseEffect(() => {\r\n\t\tfetchHyperlinks();\r\n\t}, []);\r\n\r\n\tconst fetchHyperlinks = async () => {\r\n\t\tconst hyperlinks = await Data.getHyperlinks();\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst createHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.createHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst updateHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.updateHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\tconst deleteHyperlink = async (hyperlink) => {\r\n\t\tconst hyperlinks = await Data.deleteHyperlink(hyperlink);\r\n\t\tsetStateHyperlinks(hyperlinks);\r\n\t};\r\n\r\n\tconst linkListItemEls = stateHyperlinks.map(hyperlink => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={hyperlink.id}>\r\n\t\t\t\t<LinkListItem\r\n\t\t\t\t\tid={hyperlink.id}\r\n\t\t\t\t\ttitle={hyperlink.title}\r\n\t\t\t\t\turl={hyperlink.url}\r\n\t\t\t\t\tvisited={hyperlink.visited}\r\n\t\t\t\t\tonUpdateHyperlinkAsVisited={(hyperlink) => updateHyperlink(hyperlink)}\r\n\t\t\t\t\tonDeleteHyperlink={(hyperlink) => deleteHyperlink(hyperlink)}\r\n\t\t\t\t></LinkListItem>\r\n\t\t\t\t<Divider />\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<List className={classes.root}>\r\n\t\t\t<LinkListItemAdd\r\n\t\t\t\tonSaveNewHyperlink={(hyperlink) => createHyperlink(hyperlink)}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t{linkListItemEls}\r\n\t\t</List>\r\n\t);\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LinkList from './components/LinkList/LinkList';\n\nconst useStyles = makeStyles((theme) => ({\n\tapp: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tappHeader: {\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t},\n\tappHeaderH1: {\n\t\tmarginTop: 2,\n\t\tmarginBottom: -10\n\t},\n\tappBody: {\n\t\tflex: 1,\n\t\tbackgroundColor: theme.palette.background.default, //theme.palette.background.paper\n\t},\n\tappFooter: {\n\t\tpaddingTop: 8,\n\t\tpaddingBottom: 8,\n\t\tpaddingLeft: 16,\n\t\tpaddingRight: 16,\n\t\tfontSize: 'calc(8px + 1vmin)',\n\t\tbackgroundColor: '#282c34', //theme.palette.primary.main,\n\t\tcolor: 'white' //theme.palette.text.main\n\t}\n}));\n\nfunction App() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Box className={classes.app}>\n\t\t\t<header className={classes.appHeader}>\n\t\t\t\t<h1 className={classes.appHeaderH1}>Save Links for Later</h1>\n\t\t\t\t<p>What do you want to read, watch, play or listen to?</p>\n\t\t\t</header>\n\t\t\t<Box className={classes.appBody}>\n\t\t\t\t<LinkList />\n\t\t\t</Box>\n\t\t\t<footer className={classes.appFooter}>\n\t\t\t\tCopyright &copy; 2020\n\t\t\t</footer>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}